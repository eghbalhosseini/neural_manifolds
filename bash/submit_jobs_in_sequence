#!/bin/bash
total_jobs=$1 # 10   # Total number of jobs: max 1000 per user.
run_jobs=$2   #2      # Jobs running at the same time: max 250 per user in the normal partision.
array_jobs=$3  #6    # Jobs submitted in the job array: max 1000 per array, recommended a little larger than $run_jobs
max_pend_jobs=$4  #4  # Max pending jobs in the queue: recommended no more than 50.

# First submit a job array with 300 jobs. Ideal case:  250 running, 50 pending.
sbatch --array=1-${array_jobs}%${run_jobs} $5

id=$[$array_jobs+1]   # Later Job ID follows the max ID of the job array.

# Loop untill all jobs have been submitted.
while [ $id -le $total_jobs ]; do 

  #echo $id

  # Check the number of pending jobs every 10 munites
  sleep 600
  pend_jobs=`squeue --start -r |grep $USER |wc -l`
  #echo $pend_jobs

  # Submit more jobs if the number of pending jobs is less than max pending jobs.
  more_jobs=$(($max_pend_jobs-$pend_jobs))
  #echo $more_jobs
  for i in $(seq 1 $more_jobs)  # Loop for more jobs. Do nothing if the max pending jobs is reached.  
  do
      sbatch  $5  $id   # Submit one job with job ID as an input parameter
      id=$[$id+1]      # Increase job ID by 1
      
      if [ $id -gt $total_jobs ]; then
         break    # Stop submitting jobs when all jobs have been submitted.
      fi
  done

done
